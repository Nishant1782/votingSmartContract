{
	"id": "47786759ce642bfde9fa45d815c6ed62",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"voting.sol": {
				"content": "//SPDX-License-Identifier: MIT\r\npragma solidity >0.8.0;\r\n\r\ncontract Voting{\r\n    uint noOfVoters;\r\n    uint noOfCandidates;\r\n    address admin;\r\n    struct Candidate{\r\n        string candidate_name;\r\n        string cadidate_description;\r\n        bool isValid;\r\n    }\r\n    struct Voter{\r\n        uint candidate_id;\r\n        bool isValid;\r\n        bool hasVoted;\r\n    }\r\n    constructor(){\r\n        admin = msg.sender;\r\n    }\r\n    modifier onlyOwner(){\r\n        require(msg.sender == admin,\"Access is Denied\");\r\n        _;\r\n    }\r\n    function candidateEnrollment() public returns(bool){\r\n        \r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"voting.sol": {
				"Voting": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "candidateEnrollment",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"voting.sol\":59:605  contract Voting{\r... */\n  mstore(0x40, 0x80)\n    /* \"voting.sol\":373:423  constructor(){\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"voting.sol\":405:415  msg.sender */\n  caller\n    /* \"voting.sol\":397:402  admin */\n  0x02\n  0x00\n    /* \"voting.sol\":397:415  admin = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"voting.sol\":59:605  contract Voting{\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"voting.sol\":59:605  contract Voting{\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9b74950a\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"voting.sol\":533:602  function candidateEnrollment() public returns(bool){\r... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"voting.sol\":579:583  bool */\n      0x00\n        /* \"voting.sol\":533:602  function candidateEnrollment() public returns(bool){\r... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:116   */\n    tag_10:\n        /* \"#utility.yul\":88:109   */\n      tag_12\n        /* \"#utility.yul\":103:108   */\n      dup2\n        /* \"#utility.yul\":88:109   */\n      tag_13\n      jump\t// in\n    tag_12:\n        /* \"#utility.yul\":83:86   */\n      dup3\n        /* \"#utility.yul\":76:110   */\n      mstore\n        /* \"#utility.yul\":7:116   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":122:332   */\n    tag_7:\n        /* \"#utility.yul\":209:213   */\n      0x00\n        /* \"#utility.yul\":247:249   */\n      0x20\n        /* \"#utility.yul\":236:245   */\n      dup3\n        /* \"#utility.yul\":232:250   */\n      add\n        /* \"#utility.yul\":224:250   */\n      swap1\n      pop\n        /* \"#utility.yul\":260:325   */\n      tag_15\n        /* \"#utility.yul\":322:323   */\n      0x00\n        /* \"#utility.yul\":311:320   */\n      dup4\n        /* \"#utility.yul\":307:324   */\n      add\n        /* \"#utility.yul\":298:304   */\n      dup5\n        /* \"#utility.yul\":260:325   */\n      tag_10\n      jump\t// in\n    tag_15:\n        /* \"#utility.yul\":122:332   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":338:428   */\n    tag_13:\n        /* \"#utility.yul\":372:379   */\n      0x00\n        /* \"#utility.yul\":415:420   */\n      dup2\n        /* \"#utility.yul\":408:421   */\n      iszero\n        /* \"#utility.yul\":401:422   */\n      iszero\n        /* \"#utility.yul\":390:422   */\n      swap1\n      pop\n        /* \"#utility.yul\":338:428   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b0a4fa9514140dc5b86ad36785e9be7127ac4a871cb484a83001fab1638a378764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_30": {
									"entryPoint": null,
									"id": 30,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060b4806100606000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80639b74950a14602d575b600080fd5b60336047565b604051603e91906059565b60405180910390f35b600090565b6053816072565b82525050565b6000602082019050606c6000830184604c565b92915050565b6000811515905091905056fea2646970667358221220b0a4fa9514140dc5b86ad36785e9be7127ac4a871cb484a83001fab1638a378764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xB4 DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9B74950A EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3E SWAP2 SWAP1 PUSH1 0x59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x53 DUP2 PUSH1 0x72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x6C PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x4C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 LOG4 STATICCALL SWAP6 EQ EQ 0xD 0xC5 0xB8 PUSH11 0xD36785E9BE7127AC4A871C 0xB4 DUP5 0xA8 ADDRESS ADD STATICCALL 0xB1 PUSH4 0x8A378764 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "59:546:0:-:0;;;373:50;;;;;;;;;;405:10;397:5;;:18;;;;;;;;;;;;;;;;;;59:546;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@candidateEnrollment_48": {
									"entryPoint": 71,
									"id": 48,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 76,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 89,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:431:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "83:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "103:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "88:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "88:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "76:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "76:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "76:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "54:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "61:3:1",
														"type": ""
													}
												],
												"src": "7:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "214:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "224:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "236:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "247:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "224:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "298:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "311:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "322:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "307:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "307:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "260:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "260:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "260:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "186:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "198:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "209:4:1",
														"type": ""
													}
												],
												"src": "122:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "380:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "390:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "415:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "408:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "408:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "401:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "401:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "390:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "362:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "372:7:1",
														"type": ""
													}
												],
												"src": "338:90:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c80639b74950a14602d575b600080fd5b60336047565b604051603e91906059565b60405180910390f35b600090565b6053816072565b82525050565b6000602082019050606c6000830184604c565b92915050565b6000811515905091905056fea2646970667358221220b0a4fa9514140dc5b86ad36785e9be7127ac4a871cb484a83001fab1638a378764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9B74950A EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3E SWAP2 SWAP1 PUSH1 0x59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x53 DUP2 PUSH1 0x72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x6C PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x4C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 LOG4 STATICCALL SWAP6 EQ EQ 0xD 0xC5 0xB8 PUSH11 0xD36785E9BE7127AC4A871C 0xB4 DUP5 0xA8 ADDRESS ADD STATICCALL 0xB1 PUSH4 0x8A378764 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "59:546:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;533:69;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;579:4;533:69;:::o;7:109:1:-;88:21;103:5;88:21;:::i;:::-;83:3;76:34;7:109;;:::o;122:210::-;209:4;247:2;236:9;232:18;224:26;;260:65;322:1;311:9;307:17;298:6;260:65;:::i;:::-;122:210;;;;:::o;338:90::-;372:7;415:5;408:13;401:21;390:32;;338:90;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "36000",
								"executionCost": "24353",
								"totalCost": "60353"
							},
							"external": {
								"candidateEnrollment()": "313"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 59,
									"end": 605,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 59,
									"end": 605,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 59,
									"end": 605,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 373,
									"end": 423,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 373,
									"end": 423,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 373,
									"end": 423,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 373,
									"end": 423,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 373,
									"end": 423,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 373,
									"end": 423,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 373,
									"end": 423,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 373,
									"end": 423,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 373,
									"end": 423,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 373,
									"end": 423,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 373,
									"end": 423,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 405,
									"end": 415,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 397,
									"end": 402,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 397,
									"end": 402,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 397,
									"end": 415,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 397,
									"end": 415,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 397,
									"end": 415,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 397,
									"end": 415,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 397,
									"end": 415,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 397,
									"end": 415,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 397,
									"end": 415,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 397,
									"end": 415,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 397,
									"end": 415,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 397,
									"end": 415,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 397,
									"end": 415,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 397,
									"end": 415,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 397,
									"end": 415,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 397,
									"end": 415,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 397,
									"end": 415,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 397,
									"end": 415,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 397,
									"end": 415,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 397,
									"end": 415,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 59,
									"end": 605,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59,
									"end": 605,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 59,
									"end": 605,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59,
									"end": 605,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 605,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 59,
									"end": 605,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 605,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b0a4fa9514140dc5b86ad36785e9be7127ac4a871cb484a83001fab1638a378764736f6c63430008070033",
									".code": [
										{
											"begin": 59,
											"end": 605,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 59,
											"end": 605,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59,
											"end": 605,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59,
											"end": 605,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 59,
											"end": 605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59,
											"end": 605,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 59,
											"end": 605,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59,
											"end": 605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59,
											"end": 605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59,
											"end": 605,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59,
											"end": 605,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 59,
											"end": 605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59,
											"end": 605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59,
											"end": 605,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59,
											"end": 605,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 59,
											"end": 605,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 59,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 59,
											"end": 605,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59,
											"end": 605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59,
											"end": 605,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 59,
											"end": 605,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 59,
											"end": 605,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 59,
											"end": 605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59,
											"end": 605,
											"name": "PUSH",
											"source": 0,
											"value": "9B74950A"
										},
										{
											"begin": 59,
											"end": 605,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 59,
											"end": 605,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59,
											"end": 605,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 59,
											"end": 605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59,
											"end": 605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59,
											"end": 605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59,
											"end": 605,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 533,
											"end": 602,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 533,
											"end": 602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 533,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 533,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 533,
											"end": 602,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 533,
											"end": 602,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 533,
											"end": 602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 533,
											"end": 602,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 533,
											"end": 602,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 533,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 533,
											"end": 602,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 533,
											"end": 602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 533,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 533,
											"end": 602,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 533,
											"end": 602,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 533,
											"end": 602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 533,
											"end": 602,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 533,
											"end": 602,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 533,
											"end": 602,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 533,
											"end": 602,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 533,
											"end": 602,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 533,
											"end": 602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 533,
											"end": 602,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 533,
											"end": 602,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 533,
											"end": 602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 579,
											"end": 583,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 533,
											"end": 602,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 116,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 7,
											"end": 116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 88,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 103,
											"end": 108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 88,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 88,
											"end": 109,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 88,
											"end": 109,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 88,
											"end": 109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 83,
											"end": 86,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 76,
											"end": 110,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7,
											"end": 116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 116,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 122,
											"end": 332,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 122,
											"end": 332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 209,
											"end": 213,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 247,
											"end": 249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 236,
											"end": 245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 232,
											"end": 250,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 224,
											"end": 250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 224,
											"end": 250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 260,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 322,
											"end": 323,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 307,
											"end": 324,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 298,
											"end": 304,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 260,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 260,
											"end": 325,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 260,
											"end": 325,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 260,
											"end": 325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 122,
											"end": 332,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 122,
											"end": 332,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 122,
											"end": 332,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 122,
											"end": 332,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 122,
											"end": 332,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 338,
											"end": 428,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 338,
											"end": 428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 372,
											"end": 379,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 420,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 408,
											"end": 421,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 401,
											"end": 422,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 390,
											"end": 422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 390,
											"end": 422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 338,
											"end": 428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 338,
											"end": 428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 338,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 338,
											"end": 428,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"candidateEnrollment()": "9b74950a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"candidateEnrollment\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"voting.sol\":\"Voting\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"voting.sol\":{\"keccak256\":\"0x358025f96c0d95b66041da251804db60cf4bc98d26f64a8afa2c02a3761cf0e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24b882900aae12cc9b1fdf3dca2010424222ed01a9364d1861933b3e567448c3\",\"dweb:/ipfs/QmNuUD2thogaw5JskFf9HvLWxyte3TJfdYvcCrf16PSwYe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "voting.sol:Voting",
								"label": "noOfVoters",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 5,
								"contract": "voting.sol:Voting",
								"label": "noOfCandidates",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 7,
								"contract": "voting.sol:Voting",
								"label": "admin",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"voting.sol": {
				"ast": {
					"absolutePath": "voting.sol",
					"exportedSymbols": {
						"Voting": [
							49
						]
					},
					"id": 50,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 49,
							"linearizedBaseContracts": [
								49
							],
							"name": "Voting",
							"nameLocation": "68:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "noOfVoters",
									"nameLocation": "86:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 49,
									"src": "81:15:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "81:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "noOfCandidates",
									"nameLocation": "108:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 49,
									"src": "103:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "103:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "admin",
									"nameLocation": "137:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 49,
									"src": "129:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "129:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "Voting.Candidate",
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "candidate_name",
											"nameLocation": "183:14:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "176:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 8,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "176:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 11,
											"mutability": "mutable",
											"name": "cadidate_description",
											"nameLocation": "215:20:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "208:27:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 10,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "208:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "isValid",
											"nameLocation": "251:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "246:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 12,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "246:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Candidate",
									"nameLocation": "156:9:0",
									"nodeType": "StructDefinition",
									"scope": 49,
									"src": "149:117:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Voting.Voter",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 16,
											"mutability": "mutable",
											"name": "candidate_id",
											"nameLocation": "300:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "295:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 15,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "295:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "isValid",
											"nameLocation": "328:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "323:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 17,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "323:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "hasVoted",
											"nameLocation": "351:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "346:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 19,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "346:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nameLocation": "279:5:0",
									"nodeType": "StructDefinition",
									"scope": 49,
									"src": "272:95:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 29,
										"nodeType": "Block",
										"src": "386:37:0",
										"statements": [
											{
												"expression": {
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 24,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "397:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 25,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "405:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "405:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "397:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "397:18:0"
											}
										]
									},
									"id": 30,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "384:2:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "386:0:0"
									},
									"scope": 49,
									"src": "373:50:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "449:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 33,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "468:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "468:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 35,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "482:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "468:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636573732069732044656e696564",
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "488:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3bd19f90b11ea14223b44189149c7e69da098fddb596fab6708029d12083d1f1",
																"typeString": "literal_string \"Access is Denied\""
															},
															"value": "Access is Denied"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3bd19f90b11ea14223b44189149c7e69da098fddb596fab6708029d12083d1f1",
																"typeString": "literal_string \"Access is Denied\""
															}
														],
														"id": 32,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "460:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "460:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "460:47:0"
											},
											{
												"id": 40,
												"nodeType": "PlaceholderStatement",
												"src": "518:1:0"
											}
										]
									},
									"id": 42,
									"name": "onlyOwner",
									"nameLocation": "438:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:0"
									},
									"src": "429:98:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 47,
										"nodeType": "Block",
										"src": "584:18:0",
										"statements": []
									},
									"functionSelector": "9b74950a",
									"id": 48,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "candidateEnrollment",
									"nameLocation": "542:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "561:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "579:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 44,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "579:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "578:6:0"
									},
									"scope": 49,
									"src": "533:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 50,
							"src": "59:546:0",
							"usedErrors": []
						}
					],
					"src": "32:573:0"
				},
				"id": 0
			}
		}
	}
}